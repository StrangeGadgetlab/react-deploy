{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","alt","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,kC,8ICuI5BC,MAnIf,WAEE,OACE,yBAAKC,UAAU,OAEb,yBAAKA,UAAU,wDAAwDC,GAAG,WAC5E,yBAAKD,UAAU,aACb,uBAAGA,UAAU,iCAAiCE,KAAK,aAAY,oDAAyB,uBAAGA,KAAK,yCAAR,UACxF,4BAAQF,UAAU,iBAAiBG,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBACxK,0BAAMR,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BC,GAAG,oBAC3C,wBAAID,UAAU,sBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,UAA/C,oBAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,aAA/C,aAEF,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,6BAA6BE,KAAK,YAA/C,yBAOV,4BAAQF,UAAU,yBAClB,2BAAG,yBAAKS,IAAI,gDAAgDC,IAAI,MAC9D,yBAAKV,UAAU,yBACb,4DACA,uBAAGA,UAAU,QAAO,gGAIxB,6BAASC,GAAG,SACV,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,+CACA,uBAAGA,UAAU,QAAb,8SAMR,6BAASC,GAAG,WAAWD,UAAU,YAC/B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,wCACA,uBAAGA,UAAU,QAAb,m0BA8BmC,4EAS3C,6BAASC,GAAG,WACV,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,gDACA,yBAAKW,MAAM,OACD,yBAAKA,MAAM,YACP,yBAAKA,MAAM,eACP,yBAAKA,MAAM,yBAAyBF,IAAI,wBAAwBC,IAAI,KACpE,mCACA,uBAAGC,MAAM,cAAT,eAIR,yBAAKA,MAAM,YACP,yBAAKA,MAAM,eACP,yBAAKA,MAAM,yBAAyBF,IAAI,wBAAwBC,IAAI,KACpE,qCACA,uBAAGC,MAAM,cAAT,2BAW1B,4BAAQX,UAAU,gBAChB,yBAAKA,UAAU,aACb,uBAAGA,UAAU,8BAAb,kCCjHcY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0dadcc85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      \n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" id=\"mainNav\">\n    <div className=\"container\">\n      <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\"><b>You can invite ZukBot <a href=\"https://top.gg/bot/720752022395158538\">here</a></b></a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link js-scroll-trigger\" href=\"#about\">What is ZukBot?</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link js-scroll-trigger\" href=\"#services\">Commands</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link js-scroll-trigger\" href=\"#contact\">Our amazing team</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <header className=\"bg-primary text-black\">\n  <a><img src=\"/images/d2edc046149cb37214869fa23cac4856.jpeg\" alt=\"\" /></a>\n    <div className=\"container text-center\">\n      <h1>Welcome To ZukBot's Website!</h1>\n      <p className=\"lead\"><b>Here you will learn about ZukBot and understand how to use it.</b></p>\n    </div>\n  </header>\n\n  <section id=\"about\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-8 mx-auto\">\n          <h2>What is Zukbot?</h2>\n          <p className=\"lead\">Zukbot is a discord bot for moderating, fun and much more! This bot is for the youtuber Xandergamer 123, which means you can answer trivia questions relating to him! KJD is the bot developer, so if you would like, Direct meusage KJD questions! I hope you enjoy this amazing bot, it's super fun.</p>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section id=\"services\" className=\"bg-light\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-8 mx-auto\">\n          <h2>Commands</h2>\n          <p className=\"lead\">Moderation z!kick - kicks a member, z!ban - bans a member, z!clear - purges messages. Fun: z!meme - generates a random meme, z!ascii - converts text into ascii, z!8ball - fortune-tells or seeks advice. Fun 2: z!flipcoin - flips a coin, either lands on heads or tails, z!trivia - try some questions about zuk's YT.\n\nEconomy:\n\nz!bal - checks your balance,\n\nz!work - work and recieve money,\n\nz!daily - recieve a daily award of money,\n\nz!leaderboard - checks the servers leaderboard.\n\nUtility:\n\nz!ping - get the bot's API ping,\n\nz!weather - checks the weather from where you live,\n\nz!covid - checks the covid cases in your country.\n\nFighting:\n\nz!kill - get the bot to kill someone for you,\n\nz!slap - slaps a person which you ping.\n\nSupport:\n\nz!botinvite - Direct messages you a bot invite for you to use,\n\nz!vote - Direct messages you my top.gg page. <b>The commands will be updated frequently.</b></p>\n\n    \n        </div>\n      </div>\n    </div>\n  \n  </section>\n\n  <section id=\"contact\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-8 mx-auto\">\n          <h2>Our amazing team</h2>\n          <div class=\"row\">\n                    <div class=\"col-lg-4\">\n                        <div class=\"team-member\">\n                            <img class=\"mx-auto rounded-circle\" src=\"assets/img/team/1.jpg\" alt=\"\" />\n                            <h4>KJD</h4>\n                            <p class=\"text-muted\">Developer</p>\n\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4\">\n                        <div class=\"team-member\">\n                            <img class=\"mx-auto rounded-circle\" src=\"assets/img/team/2.jpg\" alt=\"\" />\n                            <h4>Zukry</h4>\n                            <p class=\"text-muted\">Hoster of ZukBot</p>\n                           \n \n                        </div>\n                    </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  </section>\n\n  <footer className=\"py-5 bg-dark\">\n    <div className=\"container\">\n      <p className=\"m-0 text-center text-white\">Copyright &copy; ZukBot 2020</p>\n    </div>\n\n  </footer>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/scrolling-nav.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}